spring:
  shardingsphere:
    datasource:
      names: default,userds0,userds1,userds2
      default:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://47.99.144.200:3306/npp?characterEncoding=UTF-8
        username: zjx_rd
        password: zaijiaxue
        driver-class-name: com.mysql.jdbc.Driver
      userds0:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://47.99.144.200:3306/user_ds0?characterEncoding=UTF-8
        username: zjx_rd
        password: zaijiaxue
        driver-class-name: com.mysql.jdbc.Driver
      userds1:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://47.99.144.200:3306/user_ds1?characterEncoding=UTF-8
        username: zjx_rd
        password: zaijiaxue
        driver-class-name: com.mysql.jdbc.Driver
    sharding:
      defaultDataSourceName: default
      tables:
        npp_user:
          actualDataNodes: userds$->{0..1}.npp_user$->{0..2}
          databaseStrategy:
            inline:
              shardingColumn: user_id
              algorithmExpression: userds$->{java.lang.Long.parseLong(user_id)% 2}
          tableStrategy:
            inline:
              shardingColumn: user_id
              algorithmExpression: npp_user$->{java.lang.Long.parseLong(user_id) %3} # 用hashCode 容易出现负值 需要绝对值一下，但有可能重复
    props:
      sql:
        show: true
        simple: false